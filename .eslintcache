[{"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\store\\index.js":"1","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\actions\\index.js":"2","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\selectors\\index.js":"3","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\todos-list.component.js":"4","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\todo.component.js":"5","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\add-todo.component.js":"6","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\http-common.js":"7","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\App.js":"8","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\index.js":"9","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\services\\todo.service.js":"10","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\utils\\index.js":"11"},{"size":138,"mtime":1612393231095,"results":"12","hashOfConfig":"13"},{"size":2198,"mtime":1612392744747,"results":"14","hashOfConfig":"13"},{"size":997,"mtime":1612580692004,"results":"15","hashOfConfig":"13"},{"size":5842,"mtime":1612580629184,"results":"16","hashOfConfig":"13"},{"size":4796,"mtime":1612579726598,"results":"17","hashOfConfig":"13"},{"size":3247,"mtime":1612580644522,"results":"18","hashOfConfig":"13"},{"size":191,"mtime":1612573651235,"results":"19","hashOfConfig":"13"},{"size":1935,"mtime":1612580311938,"results":"20","hashOfConfig":"13"},{"size":953,"mtime":1612389818266,"results":"21","hashOfConfig":"13"},{"size":656,"mtime":1612543823097,"results":"22","hashOfConfig":"13"},{"size":349,"mtime":1612580656433,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jlarzy",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\store\\index.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\actions\\index.js",[],["48","49"],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\selectors\\index.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\todos-list.component.js",["50"],"import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    setTodos,\r\n    setSearchTitle,\r\n    setCurrentIndex,\r\n    setCurrentTodo\r\n} from '../redux/actions';\r\nimport {\r\n  selectTodos,\r\n  selectCurrentTodo,\r\n  selectCurrentIndex,\r\n  selectSearchTitle\r\n} from '../redux/selectors';\r\nimport { formatDate } from '../redux/utils';\r\n\r\nimport TodoDataService from '../redux/services/todo.service.js';\r\nimport DatePicker from 'react-date-picker';\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\n\r\n\r\nconst TodosList = () => {\r\n  const dispatch = useDispatch();\r\n  const datePicker = useRef({ isOpen: true });\r\n  // const todos = useSelector(state => state.todos);\r\n  // const currentTodo = useSelector(state => state.currentTodo);\r\n  // const currentIndex = useSelector(state => state.currentIndex);\r\n  // const searchTitle = useSelector(state => state.searchTitle);\r\n  const todos = useSelector(selectTodos);\r\n  const currentTodo = useSelector(selectCurrentTodo);\r\n  const currentIndex = useSelector(selectCurrentIndex);\r\n  const searchTitle = useSelector(selectSearchTitle);\r\n\r\n  const mapToPair = (arr = []) => {\r\n    const result = arr.map(obj => {\r\n      const res = {};\r\n      res['title'] = obj['title'];\r\n      res['date'] =  formatDate(obj['dueDate']);\r\n      return res;\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const retrieveTodos = () => {\r\n    TodoDataService.getTodos()\r\n      .then(response => {\r\n        dispatch(setTodos(response.data));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveTodos();\r\n  }, []);\r\n\r\n  const onChangeSearchTitle = e => {\r\n    dispatch(setSearchTitle(e.target.value));\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveTodos();\r\n    dispatch(setCurrentTodo(null));\r\n    dispatch(setCurrentIndex(-1));\r\n  };\r\n\r\n  const setActiveTodo = (todo, index) => {\r\n    dispatch(setCurrentTodo(todo));\r\n    dispatch(setCurrentIndex(index));\r\n    if (datePicker && datePicker.current && datePicker.current.openCalendar) {\r\n      datePicker.current.openCalendar();\r\n    }\r\n  };\r\n\r\n  const removeAllTodos = () => {\r\n    TodoDataService.deleteTodos()\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByTitle = () => {\r\n    TodoDataService.findByTitle(searchTitle)\r\n      .then(response => {\r\n        dispatch(setTodos(response.data));\r\n        // console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by title\"\r\n            value={searchTitle}\r\n            onChange={(searchTitle) => onChangeSearchTitle(searchTitle)}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={() => findByTitle()}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>To Do's List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {todos &&\r\n            todos.map((todo, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => setActiveTodo(todo, index)}\r\n                key={index}\r\n              >\r\n                {todo.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={() => removeAllTodos()}\r\n        >\r\n          Remove All\r\n        </button>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentTodo ? (\r\n          <div>\r\n            <h4>To Do</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Title:</strong>\r\n              </label>{\" \"}\r\n              {currentTodo.title}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Description:</strong>\r\n              </label>{\" \"}\r\n              {currentTodo.description}\r\n            </div>\r\n            <div>\r\n              <label><strong>Status:</strong></label>{' '}{currentTodo.status ? \"Done\" : \"Pending\"}\r\n            </div>\r\n            {/* <div>\r\n              <label>\r\n                <strong>Due Date:</strong>\r\n              </label>{\" \"}\r\n              {currentTodo.dueDate}\r\n            </div> */}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dueDate\">Due Date</label>{' '}\r\n              <DatePicker isOpen={true} ref={datePicker} value={new Date(currentTodo.dueDate)} />\r\n            </div>\r\n\r\n            <Link\r\n              to={\"/todos/\" + currentTodo._id}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a \"To Do\" item...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"col-md-6\" id=\"calendar\">\r\n        {todos ? (\r\n          <FullCalendar\r\n            plugins={[ dayGridPlugin ]}\r\n            initialView=\"dayGridMonth\"\r\n            weekends={true}\r\n            events={ mapToPair(todos) }\r\n          />\r\n        ) : (\r\n          <div>No \"To Do\" Events to Show</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosList;","C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\todo.component.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\components\\add-todo.component.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\http-common.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\App.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\index.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\services\\todo.service.js",[],"C:\\Users\\OwnerPC\\Desktop\\PROGRAMMING\\REACT\\northone-todo\\northone\\src\\redux\\utils\\index.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":59,"column":6,"nodeType":"57","endLine":59,"endColumn":8,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveTodos'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [retrieveTodos]",{"range":"64","text":"65"},[1765,1767],"[retrieveTodos]"]